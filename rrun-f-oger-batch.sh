#!/usr/local/bin/bash

source ./rrun.env.sh

########## CHOOSE MEDLINE OR PMCOA
# ### MEDLINE
TEXT_PIPELINE_KEY=MEDLINE_XML_TO_TEXT
TEXT_PIPELINE_VERSION="recent"
SUBSET_PREFIX=PUBMED_SUB_
MAX_SUBSET_INDEX=36

# #### PMCOA
# PIPELINE_KEY=FILTER_UNACTIONABLE_TEXT
# SUBSET_PREFIX=PMC_SUBSET_
# MAX_SUBSET_INDEX=36

SCRIPT=./scripts/pipelines/concepts/run_oger.sh

AUGMENTED_TEXT_PIPELINE_KEY=DOC_TEXT_AUGMENTATION
AUGMENTED_TEXT_PIPELINE_VERSION="recent"

OVERWRITE=YES

# 0.3.0 - run on augmented doc text
OUTPUT_PIPELINE_VERSION="0.3.0"

OPTIONAL_DOCUMENT_SPECIFIC_COLLECTION="null"

# # # use the below to run a single collection
# COLLECTION="PUBMED_SUB_37"
# $SCRIPT $CS_OGER_SERVICE_URL_PROD $CIMIN_OGER_SERVICE_URL_PROD $CIMAX_OGER_SERVICE_URL_PROD $PROJECT_ID ${COLLECTION} ${STAGE_LOCATION} ${TEMP_LOCATION} $TEXT_PIPELINE_KEY $TEXT_PIPELINE_VERSION $AUGMENTED_TEXT_PIPELINE_KEY $AUGMENTED_TEXT_PIPELINE_VERSION $OUTPUT_PIPELINE_VERSION $OVERWRITE $OPTIONAL_DOCUMENT_SPECIFIC_COLLECTION $JAR_VERSION &> "./logs/oger-${COLLECTION}.log" &

# ---------------------------------------------
# use the below for bulk processing
#
# for INDEX in $(seq 0 4 $MAX_SUBSET_INDEX)  
#   do 
#     ind=$(($INDEX + 0))
#     if (( ind <= $MAX_SUBSET_INDEX)); then
#         echo "Starting oger pipeline... ${ind} $(date)"
#         COLLECTION="${SUBSET_PREFIX}${ind}"
#         $SCRIPT $CS_OGER_SERVICE_URL_PROD $CIMIN_OGER_SERVICE_URL_PROD $CIMAX_OGER_SERVICE_URL_PROD $PROJECT_ID ${COLLECTION} ${STAGE_LOCATION} ${TEMP_LOCATION} $TEXT_PIPELINE_KEY $TEXT_PIPELINE_VERSION $AUGMENTED_TEXT_PIPELINE_KEY $AUGMENTED_TEXT_PIPELINE_VERSION $OUTPUT_PIPELINE_VERSION $OVERWRITE $OPTIONAL_DOCUMENT_SPECIFIC_COLLECTION $JAR_VERSION &> "./logs/oger-${COLLECTION}.log" &
#         sleep 120
#     fi
#     ind=$(($INDEX + 1))
#     if (( ind <= $MAX_SUBSET_INDEX)); then
#         echo "Starting oger pipeline... ${ind} $(date)"
#         COLLECTION="${SUBSET_PREFIX}${ind}"
#         $SCRIPT $CS_OGER_SERVICE_URL_PROD $CIMIN_OGER_SERVICE_URL_PROD $CIMAX_OGER_SERVICE_URL_PROD $PROJECT_ID ${COLLECTION} ${STAGE_LOCATION} ${TEMP_LOCATION} $TEXT_PIPELINE_KEY $TEXT_PIPELINE_VERSION $AUGMENTED_TEXT_PIPELINE_KEY $AUGMENTED_TEXT_PIPELINE_VERSION $OUTPUT_PIPELINE_VERSION $OVERWRITE $OPTIONAL_DOCUMENT_SPECIFIC_COLLECTION $JAR_VERSION &> "./logs/oger-${COLLECTION}.log" &
#         sleep 120
#     fi
#     ind=$(($INDEX + 2))
#     if (( ind <= $MAX_SUBSET_INDEX)); then
#         echo "Starting oger pipeline... ${ind} $(date)"
#         COLLECTION="${SUBSET_PREFIX}${ind}"
#         $SCRIPT $CS_OGER_SERVICE_URL_PROD $CIMIN_OGER_SERVICE_URL_PROD $CIMAX_OGER_SERVICE_URL_PROD $PROJECT_ID ${COLLECTION} ${STAGE_LOCATION} ${TEMP_LOCATION} $TEXT_PIPELINE_KEY $TEXT_PIPELINE_VERSION $AUGMENTED_TEXT_PIPELINE_KEY $AUGMENTED_TEXT_PIPELINE_VERSION $OUTPUT_PIPELINE_VERSION $OVERWRITE $OPTIONAL_DOCUMENT_SPECIFIC_COLLECTION $JAR_VERSION &> "./logs/oger-${COLLECTION}.log" &
#         sleep 120
#     fi
#     ind=$(($INDEX + 3))
#     if (( ind <= $MAX_SUBSET_INDEX)); then
#         echo "Starting oger pipeline... ${ind} $(date)"
#         COLLECTION="${SUBSET_PREFIX}${ind}"
#         $SCRIPT $CS_OGER_SERVICE_URL_PROD $CIMIN_OGER_SERVICE_URL_PROD $CIMAX_OGER_SERVICE_URL_PROD $PROJECT_ID ${COLLECTION} ${STAGE_LOCATION} ${TEMP_LOCATION} $TEXT_PIPELINE_KEY $TEXT_PIPELINE_VERSION $AUGMENTED_TEXT_PIPELINE_KEY $AUGMENTED_TEXT_PIPELINE_VERSION $OUTPUT_PIPELINE_VERSION $OVERWRITE $OPTIONAL_DOCUMENT_SPECIFIC_COLLECTION $JAR_VERSION &> "./logs/oger-${COLLECTION}.log" &
#     fi
#     wait 
#   done

# ---------------------------------------------
# use the below to do a redo-oger run where the status entities have been
# tagged by the collection-assignment pipeline. In this case, the status 
# entities will belong to a specific collection, e.g., REDO_OGER_20230915, 
# however the documents will not be tagged with that collection. In order to
# run the redo, we set OPTIONAL_DOCUMENT_SPECIFIC_COLLECTION to an appropriate 
# collection for the documents, e.g., PUBMED or PMCOA. This way, the 
# documents are not constrained to "REDO_OGER_20230915" since that would result
# in no documents being returned. The tradeoff is that more documents will be 
# initially found than needed.
OPTIONAL_DOCUMENT_SPECIFIC_COLLECTION=PUBMED
COLLECTION="REDO_OGER_20230914"
$SCRIPT $CS_OGER_SERVICE_URL_PROD $CIMIN_OGER_SERVICE_URL_PROD $CIMAX_OGER_SERVICE_URL_PROD $PROJECT_ID ${COLLECTION} ${STAGE_LOCATION} ${TEMP_LOCATION} $TEXT_PIPELINE_KEY $TEXT_PIPELINE_VERSION $AUGMENTED_TEXT_PIPELINE_KEY $AUGMENTED_TEXT_PIPELINE_VERSION $OUTPUT_PIPELINE_VERSION $OVERWRITE $OPTIONAL_DOCUMENT_SPECIFIC_COLLECTION $JAR_VERSION &> "./logs/oger-${COLLECTION}.log" &


