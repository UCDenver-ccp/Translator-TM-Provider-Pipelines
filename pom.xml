<?xml version="1.0" encoding="UTF-8"?>
<!-- Contents of this pom file borrow heavily from word-count-beam/pom.xml -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.cuanschutz.edu</groupId>
	<artifactId>tm-pipelines</artifactId>
	<version>0.1.0</version>
	<description>Pipelines used by the Translator Text Mining Provider</description>


	<properties>
		<beam.version>2.43.0</beam.version>

		<!-- <bigquery.version>v2-rev20181221-1.28.0</bigquery.version> -->
		<google-clients.version>1.32.1</google-clients.version>
		<hamcrest.version>2.1</hamcrest.version>
		<jackson.version>2.9.10</jackson.version>
		<joda.version>2.10.3</joda.version>
		<junit.version>4.13.1</junit.version>
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<maven-exec-plugin.version>1.6.0</maven-exec-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>
		<mockito.version>3.0.0</mockito.version>
		<!-- <pubsub.version>v1-rev20191111-1.28.0</pubsub.version> -->
		<slf4j.version>1.7.25</slf4j.version>
		<!-- <spark.version>2.4.4</spark.version> -->
		<!-- <hadoop.version>2.8.5</hadoop.version> -->
		<maven-surefire-plugin.version>2.21.0</maven-surefire-plugin.version>
		<!-- <nemo.version>0.1</nemo.version> -->
		<!-- <flink.artifact.name>beam-runners-flink-1.9</flink.artifact.name> -->
	</properties>

	<organization>
		<name>University of Colorado Anschutz Medical Campus</name>
	</organization>


	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>medline-xjc</id>
						<goals>
							<goal>xjc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<externalEntityProcessing>true</externalEntityProcessing>
					<sources>
						<source>src/main/resources/pubmed/pubmed_190101.dtd</source>
					</sources>
					<sourceType>dtd</sourceType>
					<packageName>org.medline</packageName>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.sun.activation</groupId>
						<artifactId>javax.activation</artifactId>
						<version>1.2.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<annotationProcessorPaths>
						<path>
							<groupId>info.picocli</groupId>
							<artifactId>picocli-codegen</artifactId>
							<version>4.7.0</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<parallel>all</parallel>
					<threadCount>4</threadCount>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>${maven-surefire-plugin.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Ensure that the Maven jar plugin runs before the Maven shade plugin 
				by listing the plugin higher within the file. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>edu.cuanschutz.ccp.tm_provider.etl.PipelineMain</mainClass>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Configures `mvn package` to produce a bundled jar ("fat jar") for 
				runners that require this for job submission to a cluster. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}-bundled-${project.version}</finalName>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/LICENSE</exclude>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${maven-exec-plugin.version}</version>
					<configuration>
						<cleanupDaemonThreads>false</cleanupDaemonThreads>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>direct-runner</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<!-- Makes the DirectRunner available when running a pipeline. -->
			<dependencies>
				<dependency>
					<groupId>org.apache.beam</groupId>
					<artifactId>beam-runners-direct-java</artifactId>
					<version>${beam.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>portable-runner</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<!-- Makes the PortableRunner available when running a pipeline. -->
			<dependencies>
				<dependency>
					<groupId>org.apache.beam</groupId>
					<artifactId>beam-runners-portability-java</artifactId>
					<version>${beam.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<!-- <profile> <id>apex-runner</id> Makes the ApexRunner available when 
			running a pipeline. <dependencies> <dependency> <groupId>org.apache.beam</groupId> 
			<artifactId>beam-runners-apex</artifactId> <version>${beam.version}</version> 
			<scope>runtime</scope> </dependency> Apex depends on httpclient version 4.3.6, 
			project has a transitive dependency to httpclient 4.0.1 from google-http-client. 
			Apex dependency version being specified explicitly so that it gets picked 
			up. This can be removed when the project no longer has a dependency on a 
			different httpclient version. <dependency> <groupId>org.apache.httpcomponents</groupId> 
			<artifactId>httpclient</artifactId> <version>4.3.6</version> <scope>runtime</scope> 
			<exclusions> <exclusion> <groupId>commons-codec</groupId> <artifactId>commons-codec</artifactId> 
			</exclusion> </exclusions> </dependency> Apex 3.6 is built against YARN 2.6. 
			Version in the fat jar has to match what's on the cluster, hence we need 
			to repeat the Apex Hadoop dependencies here. <dependency> <groupId>org.apache.hadoop</groupId> 
			<artifactId>hadoop-yarn-client</artifactId> <version>${hadoop.version}</version> 
			<scope>runtime</scope> </dependency> <dependency> <groupId>org.apache.hadoop</groupId> 
			<artifactId>hadoop-common</artifactId> <version>${hadoop.version}</version> 
			<scope>runtime</scope> </dependency> </dependencies> </profile> -->

		<profile>
			<id>dataflow-runner</id>
			<!-- Makes the DataflowRunner available when running a pipeline. -->
			<dependencies>
				<dependency>
					<groupId>org.apache.beam</groupId>
					<artifactId>beam-runners-google-cloud-dataflow-java</artifactId>
					<version>${beam.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<!-- <profile> <id>flink-runner</id> Makes the FlinkRunner available when 
			running a pipeline. <dependencies> <dependency> <groupId>org.apache.beam</groupId> 
			Please see the Flink Runner page for an up-to-date list of supported Flink 
			versions and their artifact names: https://beam.apache.org/documentation/runners/flink/ 
			<artifactId>${flink.artifact.name}</artifactId> <version>${beam.version}</version> 
			<scope>runtime</scope> </dependency> </dependencies> </profile> <profile> 
			<id>spark-runner</id> Makes the SparkRunner available when running a pipeline. 
			Additionally, overrides some Spark dependencies to Beam-compatible versions. 
			<properties> <netty.version>4.1.17.Final</netty.version> </properties> <dependencies> 
			<dependency> <groupId>org.apache.beam</groupId> <artifactId>beam-runners-spark</artifactId> 
			<version>${beam.version}</version> <scope>runtime</scope> </dependency> <dependency> 
			<groupId>org.apache.beam</groupId> <artifactId>beam-sdks-java-io-hadoop-file-system</artifactId> 
			<version>${beam.version}</version> <scope>runtime</scope> </dependency> <dependency> 
			<groupId>org.apache.spark</groupId> <artifactId>spark-streaming_2.11</artifactId> 
			<version>${spark.version}</version> <scope>runtime</scope> <exclusions> <exclusion> 
			<groupId>org.slf4j</groupId> <artifactId>jul-to-slf4j</artifactId> </exclusion> 
			</exclusions> </dependency> <dependency> <groupId>com.fasterxml.jackson.module</groupId> 
			<artifactId>jackson-module-scala_2.11</artifactId> <version>${jackson.version}</version> 
			<scope>runtime</scope> </dependency> [BEAM-3519] GCP IO exposes netty on 
			its API surface, causing conflicts with runners <dependency> <groupId>org.apache.beam</groupId> 
			<artifactId>beam-sdks-java-io-google-cloud-platform</artifactId> <version>${beam.version}</version> 
			<exclusions> <exclusion> <groupId>io.grpc</groupId> <artifactId>grpc-netty</artifactId> 
			</exclusion> <exclusion> <groupId>io.netty</groupId> <artifactId>netty-handler</artifactId> 
			</exclusion> </exclusions> </dependency> </dependencies> </profile> <profile> 
			<id>gearpump-runner</id> <dependencies> <dependency> <groupId>org.apache.beam</groupId> 
			<artifactId>beam-runners-gearpump</artifactId> <version>${beam.version}</version> 
			<scope>runtime</scope> </dependency> </dependencies> </profile> <profile> 
			<id>samza-runner</id> <dependencies> <dependency> <groupId>org.apache.beam</groupId> 
			<artifactId>beam-runners-samza</artifactId> <version>${beam.version}</version> 
			<scope>runtime</scope> </dependency> </dependencies> </profile> <profile> 
			<id>nemo-runner</id> <dependencies> <dependency> <groupId>org.apache.nemo</groupId> 
			<artifactId>nemo-compiler-frontend-beam</artifactId> <version>${nemo.version}</version> 
			</dependency> <dependency> <groupId>org.apache.hadoop</groupId> <artifactId>hadoop-common</artifactId> 
			<version>${hadoop.version}</version> <exclusions> <exclusion> <groupId>org.slf4j</groupId> 
			<artifactId>slf4j-api</artifactId> </exclusion> <exclusion> <groupId>org.slf4j</groupId> 
			<artifactId>slf4j-log4j12</artifactId> </exclusion> </exclusions> </dependency> 
			</dependencies> </profile> <profile> <id>jet-runner</id> <dependencies> <dependency> 
			<groupId>org.apache.beam</groupId> <artifactId>beam-runners-jet</artifactId> 
			<version>${beam.version}</version> <scope>runtime</scope> </dependency> </dependencies> 
			</profile> -->

	</profiles>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>31.0.1-jre</version>
			</dependency>
			<dependency>
				<groupId>com.google.cloud</groupId>
				<artifactId>libraries-bom</artifactId>
				<!-- <version>3.0.0</version> -->
				<version>26.1.4</version>
				<type>pom</type>
				<scope>import</scope>
				<exclusions>
					<!-- Exclude an old version of guava that is being pulled in by a transitive 
						dependency of google-api-client -->
					<exclusion>
						<groupId>com.google.guava</groupId>
						<artifactId>guava-jdk5</artifactId>
					</exclusion>
				</exclusions>
			</dependency>


			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.10.5.1</version>
			</dependency>

			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-api</artifactId>
				<version>1.44.0</version>
				<type>jar</type>
				<scope>import</scope>
			</dependency>
		</dependencies>



	</dependencyManagement>



	<dependencies>

		<!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<!-- <version>30.1-jre</version> -->
		</dependency>




		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<!-- <version>2.10.5.1</version> -->
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.cloud/google-cloud-datacatalog-bom -->
		<!-- Build stalls in Docker without adding this more recent version of 
			google-cloud-datacatalog-bom -->
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-datacatalog-bom</artifactId>
			<!-- <version>1.7.3</version> -->
			<version>1.12.0</version>
			<type>pom</type>
		</dependency>


		<!-- Adds a dependency on the Beam SDK. -->
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-core</artifactId>
			<version>${beam.version}</version>
		</dependency>

		<!-- Adds a dependency on the Beam Google Cloud Platform IO module. -->
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-io-google-cloud-platform</artifactId>
			<version>${beam.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-runners-google-cloud-dataflow-java</artifactId>
			<version>${beam.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.beam/beam-sdks-java-io-jdbc -->
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-io-jdbc</artifactId>
			<version>${beam.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-io-xml</artifactId>
			<version>${beam.version}</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.apache.beam/beam-sdks-java-io-elasticsearch -->
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-sdks-java-io-elasticsearch</artifactId>
			<!-- <version>2.37.0</version> -->
			<version>${beam.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-examples-java</artifactId>
			<version>${beam.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.elasticsearch.client/elasticsearch-rest-high-level-client -->
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-high-level-client</artifactId>
			<version>7.17.3</version>
		</dependency>


		<dependency>
			<groupId>co.elastic.clients</groupId>
			<artifactId>elasticsearch-java</artifactId>
			<version>7.17.3</version>
		</dependency>






		<!-- https://mvnrepository.com/artifact/com.google.http-client/google-http-client-gson -->
		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client-gson</artifactId>
			<!-- <version>1.39.2</version> -->
		</dependency>

		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client</artifactId>
			<!-- <version>1.38.0</version> -->
			<exclusions>
				<!-- Exclude an old version of guava that is being pulled in by a transitive 
					dependency of google-api-client -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<!-- Dependencies below this line are specific dependencies needed by the 
			examples code. -->
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<!-- <version>${google-clients.version}</version> -->
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.cloud.bigdataoss/gcsio -->
		<dependency>
			<groupId>com.google.cloud.bigdataoss</groupId>
			<artifactId>gcsio</artifactId>
			<version>2.2.9</version>
		</dependency>


		<!-- <dependency> <groupId>com.google.apis</groupId> <artifactId>google-api-services-bigquery</artifactId> 
			<version>${bigquery.version}</version> <exclusions> Exclude an old version 
			of guava that is being pulled in by a transitive dependency of google-api-client 
			<exclusion> <groupId>com.google.guava</groupId> <artifactId>guava-jdk5</artifactId> 
			</exclusion> </exclusions> </dependency> -->






		<!-- <dependency> <groupId>com.google.apis</groupId> <artifactId>google-api-services-pubsub</artifactId> 
			<version>${pubsub.version}</version> <exclusions> <exclusion> <groupId>com.google.guava</groupId> 
			<artifactId>guava-jdk5</artifactId> </exclusion> </exclusions> </dependency> -->

		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-datastore</artifactId>
			<exclusions>
				<!-- Exclude an old version of guava that is being pulled in by a transitive 
					dependency of google-api-client -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-bigquery</artifactId>
			<exclusions>
				<!-- Exclude an old version of guava that is being pulled in by a transitive 
					dependency of google-api-client -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.17.1</version>
		</dependency>


		<!-- Add slf4j API frontend binding with JUL backend -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
			<!-- When loaded at runtime this will wire up slf4j to the JUL backend -->
			<scope>runtime</scope>
		</dependency>

		<!-- Hamcrest and JUnit are required dependencies of PAssert, which is 
			used in the main code of DebuggingWordCount example. -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>${hamcrest.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>${hamcrest.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>

		<!-- The DirectRunner is needed for unit tests. -->
		<dependency>
			<groupId>org.apache.beam</groupId>
			<artifactId>beam-runners-direct-java</artifactId>
			<version>${beam.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.cloud.sql/mysql-socket-factory -->
		<!-- <dependency> <groupId>com.google.cloud.sql</groupId> <artifactId>mysql-socket-factory</artifactId> 
			<version>1.3.2</version> </dependency> -->


		<dependency>
			<groupId>com.google.cloud.sql</groupId>
			<artifactId>mysql-socket-factory-connector-j-8</artifactId>
			<version>1.3.2</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/com.google.http-client/google-http-client-gson -->
		<!-- <dependency> <groupId>com.google.http-client</groupId> <artifactId>google-http-client-gson</artifactId> 
			<version>1.39.2</version> </dependency> -->


		<!-- https://mvnrepository.com/artifact/com.spotify/scio-core -->
		<dependency>
			<groupId>com.spotify</groupId>
			<artifactId>scio-core_2.13</artifactId>
			<version>0.9.3</version>
		</dependency>


		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.26</version>
		</dependency>


		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.20</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>edu.ucdenver.ccp</groupId>
			<artifactId>common</artifactId>
			<version>1.5.6</version>
		</dependency>

		<dependency>
			<groupId>edu.ucdenver.ccp</groupId>
			<artifactId>datasource-fileparsers</artifactId>
			<version>0.8.0</version>
		</dependency>

		<dependency>
			<groupId>edu.ucdenver.ccp</groupId>
			<artifactId>file-conversion</artifactId>
			<version>0.2.3</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.pengyifan.bioc/pengyifan-bioc -->
		<dependency>
			<groupId>com.pengyifan.bioc</groupId>
			<artifactId>pengyifan-bioc</artifactId>
			<version>1.0.3</version>
		</dependency>

		<dependency>
			<groupId>org.apache.opennlp</groupId>
			<artifactId>opennlp-tools</artifactId>
			<version>1.7.2</version>
		</dependency>
		<dependency>
			<groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
			<artifactId>de.tudarmstadt.ukp.dkpro.core.opennlp-model-sentence-en-maxent</artifactId>
			<version>20120616.1</version>
		</dependency>
		<dependency>
			<groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
			<artifactId>de.tudarmstadt.ukp.dkpro.core.opennlp-model-token-en-maxent</artifactId>
			<version>20120616.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.apis</groupId>
			<artifactId>google-api-services-sheets</artifactId>
			<version>v4-rev20210629-1.32.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.oauth-client</groupId>
			<artifactId>google-oauth-client-jetty</artifactId>
			<!-- <version>1.23.0</version> -->
			<!-- <version>1.34.1</version> -->
		</dependency>

		<dependency>
			<groupId>com.sun.activation</groupId>
			<artifactId>javax.activation</artifactId>
			<version>1.2.0</version>
		</dependency>


		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>4.7.0</version>
		</dependency>

	</dependencies>

	<repositories>
		<repository>
			<id>bionlp-sourceforge</id>
			<url>https://svn.code.sf.net/p/bionlp/code/repo/</url>
		</repository>
		<repository>
			<id>dkpro</id>
			<url>https://zoidberg.ukp.informatik.tu-darmstadt.de/artifactory/public-releases/</url>
		</repository>
		<repository>
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

</project>